//https://leetcode.com/problems/powx-n/
class Solution {
public:
    double myPow(double x, int n) 
    {
        int m = 0;
        if ((n==0)||(x==1))
            return 1;
        else
            if (n == 1)
                return x;
        if (n>0)
        {
            
            if (n%2 == 0)
                return myPow(x*x, n/2);
                else
                    return x*myPow(x*x, (n-1)/2);
        }
        else
            m = n/2;
            if (n%2 == 0)
                return myPow(1/x, abs(m))*myPow(1/x, abs(m));
                else
                    return myPow(1/(x*x), (abs(n)-1)/2)/x;
        

   
    }
};