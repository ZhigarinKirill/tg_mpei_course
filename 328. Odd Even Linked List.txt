https://leetcode.com/problems/odd-even-linked-list/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {

        if (head == nullptr)
            return head;
        else
        if ((head->next == nullptr)||(head->next->next == nullptr))
            return head;
        else{
        ListNode *hodd = head;
        ListNode *odd = hodd;
        ListNode *heven = head->next;
        ListNode *even = heven;
        while((even != nullptr) && (even->next !=nullptr)){
            odd->next = even->next;
            even->next = even->next->next;
            even = even->next;
            odd = odd->next;  
        }
        odd->next = heven;
        return hodd;
        }
    }
};